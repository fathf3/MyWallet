
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <div id="calendar"></div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<script>

    const formatter = new Intl.DateTimeFormat("tr-TR", {
        day: "2-digit",
        month: "2-digit",
        year: "numeric",
        hour: "2-digit",
        minute: "2-digit",
        hour12: false
    });
    var colors = [
        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#d0e0e3', '#b2d75f'
    ];
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            slotMinTime: '08:00:00', // Başlangıç saati
            slotMaxTime: '23:00:00', // Bitiş saati
            hiddenDays: [0, 6],
            initialView: 'dayGridMonth',
            timeZone: 'local',
            locale: 'tr',
            eventClick: function (info) {
                const formattedStart = formatter.format(info.event.start);
                const formattedEnd = formatter.format(info.event.end);
                
                
                alert('Event: ' + info.event.title 
                + '\n'
                    + 'Seans Baslangıç : ' + formattedStart
                + '\n'
                    + 'Seans Bitiş : ' + formattedEnd);
                // change the border color just for fun
                info.el.style.borderColor = 'red';
            },
            events: {
                url: '/Seans/GetSessions',
                method: 'GET',
                extraParams: {
                    custom_param1: 'something',
                    custom_param2: 'somethingelse'
                },
                failure: function () {
                    alert('there was an error while fetching events!');
                },
                
                
                color : colors, // a non-ajax option
                textColor: 'black', // a non-ajax option

                eventDidMount: function (info) {
                    console.log(info.event.title);
                    // {description: "Lecture", department: "BioChemistry"}
                }
            },
            headerToolbar: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay,list',
                minTime: "08:00:00",
                maxTime: "22:00:00",
                        },
            
           
        });
        calendar.render();
    });



</script>

@section Scripts {
    <script src="~/js/fullcalendarv5.min.js"></script>
}